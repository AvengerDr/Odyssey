<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:vc="clr-namespace:Odyssey.Daedalus.View.Converters"
                    xmlns:vm="clr-namespace:Odyssey.Daedalus.ViewModel"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
                    xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF45"
                    xmlns:controls="clr-namespace:Odyssey.Daedalus.View.Controls"
                    xmlns:View="clr-namespace:Odyssey.Daedalus.View"
                    xmlns:materials="clr-namespace:Odyssey.Graphics.Effects;assembly=Odyssey.Common">
    <vc:TechniqueTagConverter x:Key="techniqueTagConverter" />
    <vc:CompilationStatusToBrushConverter x:Key="compilationStatusConverter" Uncompiled="{StaticResource bUncompiled}"
                Failed="{StaticResource bFailure}" Successful="{StaticResource bSuccess}" />
    <vc:ShaderModelConverter x:Key="ShaderModelConverter" />
    <vc:BoolToVisibilityConverter x:Key="BoolToVisibility" TrueValue="Visible" FalseValue="Collapsed" />
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ShaderModelValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="materials:ShaderModel" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ShaderTypeValues">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="materials:ShaderType" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!-- *********************************  Button Style  ********************************* -->
    <DataTemplate DataType="{x:Type vm:ButtonViewModel}">
        <Grid Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="48" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Button Content="{Binding Content}" Padding="2" Width="48" Height="48" ToolTip="{Binding Tooltip}" Command="{Binding MainCommand.Command}"
                                        Grid.Row="0" Grid.Column="0" />
            <ComboBox Grid.Row="0" Grid.Column="1" Width="30" Visibility="{Binding HasOtherCommands, Converter={StaticResource BoolToVisibility}}" ItemsSource="{Binding SecondaryCommands}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Label}">
                            <TextBlock.InputBindings>
                                <MouseBinding Command="{Binding Command}" MouseAction="LeftClick" />
                            </TextBlock.InputBindings>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <TextBlock Text="{Binding MainCommand.Label}" HorizontalAlignment="Center" Foreground="{StaticResource Brush03}" FontSize="10" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" />
        </Grid>
    </DataTemplate>

    <!-- *********************************  Technique Style  ********************************* -->
    <DataTemplate DataType="{x:Type vm:TechniqueMappingViewModel}">
        <Border x:Name="Root" Background="{Binding Index, Converter={StaticResource techniqueTagConverter}}" CornerRadius="8"
            BorderBrush="{DynamicResource ListBoxItemBorderBrush}" BorderThickness="1"  Margin="4" ToolTip="{Binding ToolTip}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <ei:ChangePropertyAction TargetName="Cancel" PropertyName="Visibility" Value="Visible" />
                    <ei:ChangePropertyAction TargetName="CommandToolbar" PropertyName="IsOpen" Value="True" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeave">
                    <ei:ChangePropertyAction TargetName="Cancel" PropertyName="Visibility" Value="Hidden" />
                    <ei:ChangePropertyAction TargetName="CommandToolbar" PropertyName="IsOpen" Value="False" />
                </i:EventTrigger>
                <i:EventTrigger EventName="LostFocus">
                    <ei:ChangePropertyAction TargetName="CommandToolbar" PropertyName="IsOpen" Value="False" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel Orientation="Horizontal" Height="24">
                <TextBlock Text="{Binding Name}" HorizontalAlignment="Center" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" Margin="4" FontSize="14" FontWeight="SemiBold" />
                <Popup x:Name="CommandToolbar"  Visibility="Collapsed" Placement="Top">
                    <Border Background="{DynamicResource ListBoxItemBackgroundBrush}" BorderBrush="{DynamicResource ListBoxItemBorderBrush}"
                        Width="224" Height="80">
                        <ListBox x:Name="techniquePanel" ItemsSource="{Binding Commands}" Focusable="False">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                        </ListBox>
                    </Border>
                </Popup>
            </StackPanel>
        </Border>
    </DataTemplate>

    <DataTemplate x:Key="BriefTechniqueMapping" DataType="{x:Type vm:TechniqueMappingViewModel}">
        <Border x:Name="Root" Background="{Binding Index, Converter={StaticResource techniqueTagConverter}}" CornerRadius="8" BorderBrush="{DynamicResource ListBoxItemBorderBrush}" BorderThickness="1"  Margin="4" Width="32" ToolTip="{Binding Name}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="MouseEnter">
                    <ei:ChangePropertyAction TargetName="Cancel" PropertyName="Visibility" Value="Visible" />
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeave">
                    <ei:ChangePropertyAction TargetName="Cancel" PropertyName="Visibility" Value="Hidden" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <StackPanel Orientation="Horizontal">
                <Button x:Name="Cancel" Visibility="Hidden"  HorizontalContentAlignment="Center" VerticalAlignment="Center">
                    <Button.Template>
                        <ControlTemplate>
                            <TextBlock Text="×" FontWeight="Bold" FontSize="24" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,2" />
                        </ControlTemplate>
                    </Button.Template>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseEnter">
                            <ei:ChangePropertyAction PropertyName="Foreground" Value="White" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="MouseLeave">
                            <ei:ChangePropertyAction PropertyName="Foreground" Value="Silver" />
                        </i:EventTrigger>
                        <i:EventTrigger EventName="Click">
                            <cmd:EventToCommand Command="{Binding UnassignTechniqueCommand}" CommandParameter="{Binding}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Border>
    </DataTemplate>

    <!-- *********************************  ShaderDescription Style  ********************************* -->
    <DataTemplate DataType="{x:Type vm:ShaderDescriptionViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <ItemsControl ItemsSource="{Binding Techniques}" ItemTemplate="{StaticResource BriefTechniqueMapping}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <TextBlock Text="{Binding Type}" Grid.Column="1" VerticalAlignment="Center" />
            <TextBlock Text="{Binding Name}" Grid.Column="2" VerticalAlignment="Center" />
            <ComboBox ItemsSource="{Binding Source= {StaticResource ShaderModelValues}}" SelectedItem="{Binding ShaderModel}" Grid.Column="3" VerticalAlignment="Center">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource ShaderModelConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Ellipse Width="24" Height="24" Fill="{Binding CompilationStatus, Converter={StaticResource compilationStatusConverter}}" Grid.Column="4" VerticalAlignment="Center" />
            <Button Content="View" Command="{Binding ViewCodeCommand}" CommandParameter="{Binding}" Grid.Column="5" />
        </Grid>
    </DataTemplate>

    <!-- *********************************  ShaderCode Style  ********************************* -->
    <DataTemplate DataType="{x:Type vm:ShaderCodeViewModel}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="2*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30" />
            </Grid.RowDefinitions>
            <ItemsControl ItemsSource="{Binding Techniques}" ItemTemplate="{StaticResource BriefTechniqueMapping}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <ComboBox ItemsSource="{Binding Source={StaticResource ShaderTypeValues}}" SelectedItem="{Binding Type}" Grid.Column="1" Margin="0,0,12,0" />
            <TextBox Text="{Binding Name}" Grid.Column="2" VerticalAlignment="Center" Margin="0,0,12,0" ToolTip="Type entrypoint name here" />
            <ComboBox ItemsSource="{Binding Source= {StaticResource ShaderModelValues}}" SelectedItem="{Binding ShaderModel}" Grid.Column="3" VerticalAlignment="Center">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource ShaderModelConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <Ellipse Width="24" Height="24" Fill="{Binding CompilationStatus, Converter={StaticResource compilationStatusConverter}}" Grid.Column="4" VerticalAlignment="Center" />
            <Button Content="View" Command="{Binding ViewCodeCommand}" CommandParameter="{Binding}" Grid.Column="5" />
        </Grid>
    </DataTemplate>

    <!-- *********************************  ExpandableFlagBox Style  ********************************* -->
    <Style x:Key="ExpandableFlagBox" TargetType="{x:Type ListBox}" BasedOn="{StaticResource ListBoxStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Expander x:Name="Expander" Margin="4,8,4,0" Header="{TemplateBinding Tag}" FontSize="24" IsExpanded="True" Foreground="{TemplateBinding Foreground}">
                        <Border BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
                            <ItemsPresenter SnapsToDevicePixels="True" />
                        </Border>
                    </Expander>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="IsExpanded" Value="false" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="true">
                            <Setter TargetName="Expander" Property="IsExpanded" Value="true" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <CheckBox x:Name="CheckBox" Content="{Binding Name}" Width="140" IsChecked="{Binding Selected}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <cmd:EventToCommand Command="{Binding DataContext.UpdateFlagCommand, NotifyOnTargetUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" CommandParameter="{Binding DataContext, ElementName=CheckBox}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </CheckBox>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource ListBoxItemStyle}">
                    <Setter Property="Focusable" Value="False" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>